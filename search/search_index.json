{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#flet-map","title":"flet-map","text":"<p>A Flet extension for displaying interactive maps.</p> <p>It is based on the flutter_map Flutter package.</p>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u2705 macOS \u2705 Linux \u2705 iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-map</code> package and add it to your project dependencies:</p> uvpippoetry <pre><code>uv add flet-map\n</code></pre> <pre><code>pip install flet-map  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> <pre><code>poetry add flet-map\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>See these.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-map/</li> <li>New controls:<ul> <li><code>SourceAttribution</code></li> <li><code>ImageSourceAttribution</code></li> </ul> </li> <li>New types:<ul> <li><code>Camera</code></li> <li><code>CameraFit</code></li> <li><code>CursorKeyboardRotationConfiguration</code></li> <li><code>CursorRotationBehaviour</code></li> <li><code>KeyboardConfiguration</code></li> </ul> </li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored all controls to use <code>@flet.control</code> dataclass-style definition.</li> <li>The following classes were renamed:<ul> <li><code>MapInteractionConfiguration</code> \u2192 <code>InteractionConfiguration</code></li> <li><code>MapInteractiveFlag</code> \u2192 <code>InteractionFlag</code></li> <li><code>MapMultiFingerGesture</code> \u2192 <code>MultiFingerGesture</code></li> <li><code>MapTileLayerEvictErrorTileStrategy</code> \u2192 <code>TileLayerEvictErrorTileStrategy</code></li> </ul> </li> </ul>"},{"location":"changelog/#010-2025-01-15","title":"0.1.0 - 2025-01-15","text":"<p>Initial release.</p>"},{"location":"circle_layer/","title":"CircleLayer","text":""},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer","title":"CircleLayer","text":"<p>               Bases: <code>MapLayer</code></p> <p>A layer to display <code>CircleMarker</code>s.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.circles","title":"circles","text":"<pre><code>circles: list[CircleMarker]\n</code></pre> <p>A list of <code>CircleMarker</code>s to display.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"circle_layer/#flet_map.circle_layer.CircleLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"circle_marker/","title":"CircleMarker","text":""},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker","title":"CircleMarker","text":"<p>               Bases: <code>Control</code></p> <p>A circular marker displayed on the Map at the specified location through the <code>CircleLayer</code>.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If the <code>border_stroke_width</code> is negative.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.border_color","title":"border_color","text":"<pre><code>border_color: ColorValue | None = None\n</code></pre> <p>The color of the circle border line.</p> Note <p><code>border_stroke_width</code> must to be greater than <code>0.0</code> in order for this color to be visible.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.border_stroke_width","title":"border_stroke_width","text":"<pre><code>border_stroke_width: Number = 0.0\n</code></pre> <p>The stroke width for the circle border.</p> Note <p>Must be non-negative.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.color","title":"color","text":"<pre><code>color: ColorValue | None = None\n</code></pre> <p>The color of the circle area.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre> <p>The center coordinates of the circle</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.radius","title":"radius","text":"<pre><code>radius: Number\n</code></pre> <p>The radius of the circle</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.use_radius_in_meter","title":"use_radius_in_meter","text":"<pre><code>use_radius_in_meter: bool = False\n</code></pre> <p>Whether the <code>radius</code> should use the unit meters.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"circle_marker/#flet_map.circle_layer.CircleMarker.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"image_source_attribution/","title":"ImageSourceAttribution","text":""},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution","title":"ImageSourceAttribution","text":"<p>               Bases: <code>SourceAttribution</code></p> <p>An image attribution permanently displayed adjacent to the open/close icon of a <code>RichAttribution</code> control. For it to be displayed, it should be part of a <code>RichAttribution.attributions</code> list.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If the <code>image</code> is not visible.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.height","title":"height","text":"<pre><code>height: Number = 24.0\n</code></pre> <p>The height of the image. Should be the same as <code>RichAttribution.permanent_height</code>, otherwise layout issues may occur.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.image","title":"image","text":"<pre><code>image: Image\n</code></pre> <p>The <code>Image</code> to be displayed.</p> Note <p>Must be provided and visible.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.on_click","title":"on_click","text":"<pre><code>on_click: (\n    ControlEventHandler[ImageSourceAttribution] | None\n) = None\n</code></pre> <p>Fired when this attribution is clicked/pressed.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.tooltip","title":"tooltip","text":"<pre><code>tooltip: str | None = None\n</code></pre> <p>Tooltip text to be displayed when the image is hovered over.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"image_source_attribution/#flet_map.source_attribution.ImageSourceAttribution.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"license/","title":"Licence","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"map/","title":"Map","text":""},{"location":"map/#examples","title":"Examples","text":""},{"location":"map/#example-1","title":"Example 1","text":"example_1.py<pre><code>import random\n\nimport flet as ft\n\nimport flet_map as ftm\n\n\ndef main(page: ft.Page):\n    marker_layer_ref = ft.Ref[ftm.MarkerLayer]()\n    circle_layer_ref = ft.Ref[ftm.CircleLayer]()\n\n    def handle_tap(e: ftm.MapTapEvent):\n        if e.name == \"tap\":\n            marker_layer_ref.current.markers.append(\n                ftm.Marker(\n                    content=ft.Icon(\n                        ft.Icons.LOCATION_ON, color=ft.CupertinoColors.DESTRUCTIVE_RED\n                    ),\n                    coordinates=e.coordinates,\n                )\n            )\n        elif e.name == \"secondary_tap\":\n            circle_layer_ref.current.circles.append(\n                ftm.CircleMarker(\n                    radius=random.randint(5, 10),\n                    coordinates=e.coordinates,\n                    color=ft.Colors.random(),\n                    border_color=ft.Colors.random(),\n                    border_stroke_width=4,\n                )\n            )\n        page.update()\n\n    page.add(\n        ft.Text(\"Click anywhere to add a Marker, right-click to add a CircleMarker.\"),\n        ftm.Map(\n            expand=True,\n            initial_center=ftm.MapLatitudeLongitude(15, 10),\n            initial_zoom=4.2,\n            interaction_configuration=ftm.InteractionConfiguration(\n                flags=ftm.InteractionFlag.ALL\n            ),\n            on_tap=handle_tap,\n            on_secondary_tap=handle_tap,\n            on_long_press=handle_tap,\n            on_event=print,\n            layers=[\n                ftm.TileLayer(\n                    url_template=\"https://tile.openstreetftm.org/{z}/{x}/{y}.png\",\n                    on_image_error=lambda e: print(\"TileLayer Error\"),\n                ),\n                ftm.RichAttribution(\n                    attributions=[\n                        ftm.TextSourceAttribution(\n                            text=\"OpenStreetMap Contributors\",\n                            on_click=lambda e: e.page.launch_url(\n                                \"https://openstreetftm.org/copyright\"\n                            ),\n                        ),\n                        ftm.TextSourceAttribution(\n                            text=\"Flet\",\n                            on_click=lambda e: e.page.launch_url(\"https://flet.dev\"),\n                        ),\n                    ]\n                ),\n                ftm.SimpleAttribution(\n                    text=\"Flet\",\n                    alignment=ft.Alignment.TOP_RIGHT,\n                    on_click=lambda e: print(\"Clicked SimpleAttribution\"),\n                ),\n                ftm.MarkerLayer(\n                    ref=marker_layer_ref,\n                    markers=[\n                        ftm.Marker(\n                            content=ft.Icon(ft.Icons.LOCATION_ON),\n                            coordinates=ftm.MapLatitudeLongitude(30, 15),\n                        ),\n                        ftm.Marker(\n                            content=ft.Icon(ft.Icons.LOCATION_ON),\n                            coordinates=ftm.MapLatitudeLongitude(10, 10),\n                        ),\n                        ftm.Marker(\n                            content=ft.Icon(ft.Icons.LOCATION_ON),\n                            coordinates=ftm.MapLatitudeLongitude(25, 45),\n                        ),\n                    ],\n                ),\n                ftm.CircleLayer(\n                    ref=circle_layer_ref,\n                    circles=[\n                        ftm.CircleMarker(\n                            radius=10,\n                            coordinates=ftm.MapLatitudeLongitude(16, 24),\n                            color=ft.Colors.RED,\n                            border_color=ft.Colors.BLUE,\n                            border_stroke_width=4,\n                        ),\n                    ],\n                ),\n                ftm.PolygonLayer(\n                    polygons=[\n                        ftm.PolygonMarker(\n                            label=\"Popular Touristic Area\",\n                            label_text_style=ft.TextStyle(\n                                color=ft.Colors.BLACK,\n                                size=15,\n                                weight=ft.FontWeight.BOLD,\n                            ),\n                            color=ft.Colors.with_opacity(0.3, ft.Colors.BLUE),\n                            coordinates=[\n                                ftm.MapLatitudeLongitude(10, 10),\n                                ftm.MapLatitudeLongitude(30, 15),\n                                ftm.MapLatitudeLongitude(25, 45),\n                            ],\n                        ),\n                    ],\n                ),\n                ftm.PolylineLayer(\n                    polylines=[\n                        ftm.PolylineMarker(\n                            border_stroke_width=3,\n                            border_color=ft.Colors.RED,\n                            gradient_colors=[ft.Colors.BLACK, ft.Colors.BLACK],\n                            color=ft.Colors.with_opacity(0.6, ft.Colors.GREEN),\n                            coordinates=[\n                                ftm.MapLatitudeLongitude(10, 10),\n                                ftm.MapLatitudeLongitude(30, 15),\n                                ftm.MapLatitudeLongitude(25, 45),\n                            ],\n                        ),\n                    ],\n                ),\n            ],\n        ),\n    )\n\n\nft.run(main)\n</code></pre>"},{"location":"map/#flet_map.map.Map","title":"Map","text":"<p>               Bases: <code>ConstrainedControl</code></p> <p>An interactive map that displays various layers.</p>"},{"location":"map/#flet_map.map.Map.align","title":"align","text":"<pre><code>align: Alignment | None = None\n</code></pre> <p>Alignment of the control within its parent.</p>"},{"location":"map/#flet_map.map.Map.animate_align","title":"animate_align","text":"<pre><code>animate_align: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>align</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_margin","title":"animate_margin","text":"<pre><code>animate_margin: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>margin</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_offset","title":"animate_offset","text":"<pre><code>animate_offset: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>offset</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_opacity","title":"animate_opacity","text":"<pre><code>animate_opacity: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>opacity</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_position","title":"animate_position","text":"<pre><code>animate_position: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the positioning properties (<code>left</code>, <code>right</code>, <code>top</code> and <code>bottom</code>).</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_rotation","title":"animate_rotation","text":"<pre><code>animate_rotation: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>rotate</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_scale","title":"animate_scale","text":"<pre><code>animate_scale: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>scale</code> property.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.animate_size","title":"animate_size","text":"<pre><code>animate_size: AnimationValue | None = None\n</code></pre> <p>TBD</p>"},{"location":"map/#flet_map.map.Map.animation_curve","title":"animation_curve","text":"<pre><code>animation_curve: AnimationCurve = FAST_OUT_SLOWIN\n</code></pre> <p>The default animation curve to be used for map-animations when calling instance methods like <code>zoom_in()</code>, <code>rotate_from()</code>, <code>move_to()</code> etc.</p>"},{"location":"map/#flet_map.map.Map.animation_duration","title":"animation_duration","text":"<pre><code>animation_duration: DurationValue = field(\n    default_factory=lambda: Duration(milliseconds=500)\n)\n</code></pre> <p>The default animation duration to be used for map-animations when calling instance methods like <code>zoom_in()</code>, <code>rotate_from()</code>, <code>move_to()</code> etc.</p>"},{"location":"map/#flet_map.map.Map.aspect_ratio","title":"aspect_ratio","text":"<pre><code>aspect_ratio: Number | None = None\n</code></pre> <p>TBD</p>"},{"location":"map/#flet_map.map.Map.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"map/#flet_map.map.Map.bgcolor","title":"bgcolor","text":"<pre><code>bgcolor: ColorValue = GREY_300\n</code></pre> <p>The background color of this control.</p>"},{"location":"map/#flet_map.map.Map.bottom","title":"bottom","text":"<pre><code>bottom: Number | None = None\n</code></pre> <p>The distance that the child's bottom edge is inset from the bottom of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"map/#flet_map.map.Map.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"map/#flet_map.map.Map.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"map/#flet_map.map.Map.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"map/#flet_map.map.Map.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"map/#flet_map.map.Map.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"map/#flet_map.map.Map.height","title":"height","text":"<pre><code>height: Number | None = None\n</code></pre> <p>Imposed Control height in virtual pixels.</p>"},{"location":"map/#flet_map.map.Map.initial_camera_fit","title":"initial_camera_fit","text":"<pre><code>initial_camera_fit: CameraFit | None = None\n</code></pre> <p>Defines the visible bounds when the map is first loaded. Takes precedence over <code>initial_center</code>/<code>initial_zoom</code>.</p>"},{"location":"map/#flet_map.map.Map.initial_center","title":"initial_center","text":"<pre><code>initial_center: MapLatitudeLongitude = field(\n    default_factory=lambda: MapLatitudeLongitude(\n        latitude=50.5, longitude=30.51\n    )\n)\n</code></pre> <p>The initial center of the map.</p>"},{"location":"map/#flet_map.map.Map.initial_rotation","title":"initial_rotation","text":"<pre><code>initial_rotation: Number = 0.0\n</code></pre> <p>The rotation (in degrees) when the map is first loaded.</p>"},{"location":"map/#flet_map.map.Map.initial_zoom","title":"initial_zoom","text":"<pre><code>initial_zoom: Number = 13.0\n</code></pre> <p>The zoom when the map is first loaded. If initial_camera_fit is defined this has no effect.</p>"},{"location":"map/#flet_map.map.Map.interaction_configuration","title":"interaction_configuration","text":"<pre><code>interaction_configuration: InteractionConfiguration = field(\n    default_factory=lambda: InteractionConfiguration()\n)\n</code></pre> <p>The interaction configuration.</p>"},{"location":"map/#flet_map.map.Map.keep_alive","title":"keep_alive","text":"<pre><code>keep_alive: bool = False\n</code></pre> <p>Whether to enable the built in keep-alive functionality.</p> <p>If the map is within a complex layout, such as a <code>ListView</code>, the map will reset to it's inital position after it appears back into view. To ensure this doesn't happen, enable this flag to prevent it from rebuilding.</p>"},{"location":"map/#flet_map.map.Map.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"map/#flet_map.map.Map.layers","title":"layers","text":"<pre><code>layers: list[MapLayer]\n</code></pre> <p>A list of layers to be displayed (stack-like) on the map.</p>"},{"location":"map/#flet_map.map.Map.left","title":"left","text":"<pre><code>left: Number | None = None\n</code></pre> <p>The distance that the child's left edge is inset from the left of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"map/#flet_map.map.Map.margin","title":"margin","text":"<pre><code>margin: MarginValue | None = None\n</code></pre> <p>Sets the margin of the control.</p>"},{"location":"map/#flet_map.map.Map.max_zoom","title":"max_zoom","text":"<pre><code>max_zoom: Number | None = None\n</code></pre> <p>The maximum (highest) zoom level of every layer. Each layer can specify additional zoom level restrictions.</p>"},{"location":"map/#flet_map.map.Map.min_zoom","title":"min_zoom","text":"<pre><code>min_zoom: Number | None = None\n</code></pre> <p>The minimum (smallest) zoom level of every layer. Each layer can specify additional zoom level restrictions.</p>"},{"location":"map/#flet_map.map.Map.offset","title":"offset","text":"<pre><code>offset: OffsetValue | None = None\n</code></pre> <p>Applies a translation transformation before painting the control.</p> <p>The translation is expressed as an <code>Offset</code> scaled to the control's size. So, <code>Offset(x=0.25, y=0)</code>, for example, will result in a horizontal translation of one quarter the width of this control.</p> <p>/// details | Example     type: example The following example displays container at <code>0, 0</code> top left corner of a stack as transform applies <code>-1 * 100, -1 * 100</code> (<code>offset * control's size</code>) horizontal and vertical translations to the control:</p> <p></p><pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Stack(\n            width=1000,\n            height=1000,\n            controls=[\n                ft.Container(\n                    bgcolor=\"red\",\n                    width=100,\n                    height=100,\n                    left=100,\n                    top=100,\n                    offset=ft.Offset(-1, -1),\n                )\n            ],\n        )\n    )\n\nft.run(main)\n</code></pre> ///<p></p>"},{"location":"map/#flet_map.map.Map.on_animation_end","title":"on_animation_end","text":"<pre><code>on_animation_end: (\n    ControlEventHandler[LayoutControl] | None\n) = None\n</code></pre> <p>Called when animation completes.</p> <p>Can be used to chain multiple animations.</p> <p>The <code>data</code> property of the event handler argument contains the name of the animation.</p> <p>More information here.</p>"},{"location":"map/#flet_map.map.Map.on_event","title":"on_event","text":"<pre><code>on_event: EventHandler[MapEvent] | None = None\n</code></pre> <p>Fires when any map events occurs.</p>"},{"location":"map/#flet_map.map.Map.on_hover","title":"on_hover","text":"<pre><code>on_hover: EventHandler[MapHoverEvent] | None = None\n</code></pre> <p>Fires when a hover event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_init","title":"on_init","text":"<pre><code>on_init: ControlEventHandler[Map] | None = None\n</code></pre> <p>Fires when the map is initialized.</p>"},{"location":"map/#flet_map.map.Map.on_long_press","title":"on_long_press","text":"<pre><code>on_long_press: EventHandler[MapTapEvent] | None = None\n</code></pre> <p>Fires when a long press event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_pointer_cancel","title":"on_pointer_cancel","text":"<pre><code>on_pointer_cancel: EventHandler[MapPointerEvent] | None = (\n    None\n)\n</code></pre> <p>Fires when a pointer cancel event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_pointer_down","title":"on_pointer_down","text":"<pre><code>on_pointer_down: EventHandler[MapPointerEvent] | None = None\n</code></pre> <p>Fires when a pointer down event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_pointer_up","title":"on_pointer_up","text":"<pre><code>on_pointer_up: EventHandler[MapPointerEvent] | None = None\n</code></pre> <p>Fires when a pointer up event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_position_change","title":"on_position_change","text":"<pre><code>on_position_change: (\n    EventHandler[MapPositionChangeEvent] | None\n) = None\n</code></pre> <p>Fires when the map position changes.</p>"},{"location":"map/#flet_map.map.Map.on_secondary_tap","title":"on_secondary_tap","text":"<pre><code>on_secondary_tap: EventHandler[MapTapEvent] | None = None\n</code></pre> <p>Fires when a secondary tap event occurs.</p>"},{"location":"map/#flet_map.map.Map.on_tap","title":"on_tap","text":"<pre><code>on_tap: EventHandler[MapTapEvent] | None = None\n</code></pre> <p>Fires when a tap event occurs.</p>"},{"location":"map/#flet_map.map.Map.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"map/#flet_map.map.Map.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"map/#flet_map.map.Map.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"map/#flet_map.map.Map.right","title":"right","text":"<pre><code>right: Number | None = None\n</code></pre> <p>The distance that the child's right edge is inset from the right of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"map/#flet_map.map.Map.rotate","title":"rotate","text":"<pre><code>rotate: RotateValue | None = None\n</code></pre> <p>Transforms this control using a rotation around its center.</p> <p>The value of <code>rotate</code> property could be one of the following types:</p> <ul> <li><code>number</code> - a rotation in clockwise radians. Full circle <code>360\u00b0</code> is <code>math.pi * 2</code> radians, <code>90\u00b0</code> is <code>pi / 2</code>, <code>45\u00b0</code> is <code>pi / 4</code>, etc.</li> <li><code>Rotate</code> - allows to specify rotation <code>angle</code> as well as <code>alignment</code> - the location of rotation center.</li> </ul> <p>/// details | Example     type: example For example: </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    rotate=Rotate(angle=0.25 * pi, alignment=ft.Alignment.CENTER_LEFT)\n)\n</code></pre> ///<p></p>"},{"location":"map/#flet_map.map.Map.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"map/#flet_map.map.Map.scale","title":"scale","text":"<pre><code>scale: ScaleValue | None = None\n</code></pre> <p>Scales this control along the 2D plane. Default scale factor is <code>1.0</code>, meaning no-scale.</p> <p>Setting this property to <code>0.5</code>, for example, makes this control twice smaller, while <code>2.0</code> makes it twice larger.</p> <p>Different scale multipliers can be specified for <code>x</code> and <code>y</code> axis, by setting <code>Control.scale</code> property to an instance of <code>Scale</code> class. Either <code>scale</code> or <code>scale_x</code> and <code>scale_y</code> could be specified, but not all of them.</p> <p>/// details | Example     type: example </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    scale=ft.Scale(scale_x=2, scale_y=0.5)\n)\n</code></pre> ///<p></p>"},{"location":"map/#flet_map.map.Map.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"map/#flet_map.map.Map.top","title":"top","text":"<pre><code>top: Number | None = None\n</code></pre> <p>The distance that the child's top edge is inset from the top of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"map/#flet_map.map.Map.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"map/#flet_map.map.Map.width","title":"width","text":"<pre><code>width: Number | None = None\n</code></pre> <p>Imposed Control width in virtual pixels.</p>"},{"location":"map/#flet_map.map.Map.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"map/#flet_map.map.Map.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"map/#flet_map.map.Map.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"map/#flet_map.map.Map.center_on","title":"center_on","text":"<pre><code>center_on(\n    point: MapLatitudeLongitude,\n    zoom: Number | None,\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Centers the map on the given point.</p> PARAMETER DESCRIPTION <code>point</code> <p>The point on which to center the map.</p> <p> TYPE: <code>MapLatitudeLongitude</code> </p> <code>zoom</code> <p>The zoom level to be applied.</p> <p> TYPE: <code>Number | None</code> </p> <code>animation_curve</code> <p>The curve of the animation. If <code>None</code> (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map/#flet_map.map.Map.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"map/#flet_map.map.Map.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"map/#flet_map.map.Map.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"map/#flet_map.map.Map.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"map/#flet_map.map.Map.move_to","title":"move_to","text":"<pre><code>move_to(\n    destination: MapLatitudeLongitude | None = None,\n    zoom: Number | None = None,\n    rotation: Number | None = None,\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    offset: OffsetValue = (0, 0),\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Moves to a specific location.</p> PARAMETER DESCRIPTION <code>destination</code> <p>The destination point to move to.</p> <p> TYPE: <code>MapLatitudeLongitude | None</code> DEFAULT: <code>None</code> </p> <code>zoom</code> <p>The zoom level to be applied. If provided, must be greater than or equal to <code>0.0</code>.</p> <p> TYPE: <code>Number | None</code> DEFAULT: <code>None</code> </p> <code>rotation</code> <p>Rotation (in degrees) to be applied.</p> <p> TYPE: <code>Number | None</code> DEFAULT: <code>None</code> </p> <code>offset</code> <p>The offset to be used. Only works when <code>rotation</code> is <code>None</code>.</p> <p> TYPE: <code>OffsetValue</code> DEFAULT: <code>(0, 0)</code> </p> <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> RAISES DESCRIPTION <code>AssertionError</code> <p>If <code>zoom</code> is not <code>None</code> and is negative.</p>"},{"location":"map/#flet_map.map.Map.reset_rotation","title":"reset_rotation","text":"<pre><code>reset_rotation(\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Resets the map's rotation to 0 degrees.</p> PARAMETER DESCRIPTION <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map/#flet_map.map.Map.rotate_from","title":"rotate_from","text":"<pre><code>rotate_from(\n    degree: Number,\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Applies a rotation of <code>degree</code> to the current rotation.</p> PARAMETER DESCRIPTION <code>degree</code> <p>The number of degrees to increment to the current rotation.</p> <p> TYPE: <code>Number</code> </p> <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map/#flet_map.map.Map.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"map/#flet_map.map.Map.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"map/#flet_map.map.Map.zoom_in","title":"zoom_in","text":"<pre><code>zoom_in(\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Zooms in by one zoom-level from the current one.</p> PARAMETER DESCRIPTION <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map/#flet_map.map.Map.zoom_out","title":"zoom_out","text":"<pre><code>zoom_out(\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Zooms out by one zoom-level from the current one.</p> PARAMETER DESCRIPTION <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map/#flet_map.map.Map.zoom_to","title":"zoom_to","text":"<pre><code>zoom_to(\n    zoom: Number,\n    animation_curve: AnimationCurve | None = None,\n    animation_duration: DurationValue | None = None,\n    cancel_ongoing_animations: bool = False,\n) -&gt; None\n</code></pre> <p>Zoom the map to a specific zoom level.</p> PARAMETER DESCRIPTION <code>zoom</code> <p>The zoom level to zoom to.</p> <p> TYPE: <code>Number</code> </p> <code>animation_curve</code> <p>The curve of the animation. If None (the default), <code>Map.animation_curve</code> will be used.</p> <p> TYPE: <code>AnimationCurve | None</code> DEFAULT: <code>None</code> </p> <code>animation_duration</code> <p>The duration of the animation. If None (the default), <code>Map.animation_duration</code> will be used.</p> <p> TYPE: <code>DurationValue | None</code> DEFAULT: <code>None</code> </p> <code>cancel_ongoing_animations</code> <p>Whether to cancel/stop all ongoing map-animations before starting this new one.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p>"},{"location":"map_layer/","title":"MapLayer","text":""},{"location":"map_layer/#flet_map.map_layer.MapLayer","title":"MapLayer","text":"<p>               Bases: <code>Control</code></p> <p>Abstract class for all map layers.</p> <p>The following layers are available:</p> <ul> <li><code>CircleLayer</code></li> <li><code>MarkerLayer</code></li> <li><code>PolygonLayer</code></li> <li><code>PolylineLayer</code></li> <li><code>RichAttribution</code></li> <li><code>SimpleAttribution</code></li> <li><code>TileLayer</code></li> </ul>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"map_layer/#flet_map.map_layer.MapLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"marker/","title":"Marker","text":""},{"location":"marker/#flet_map.marker_layer.Marker","title":"Marker","text":"<p>               Bases: <code>Control</code></p> <p>A marker displayed on the Map at the specified location through the <code>MarkerLayer</code>.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If the <code>content</code> is not visible, or if <code>height</code> or <code>width</code> are negative.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.alignment","title":"alignment","text":"<pre><code>alignment: Alignment | None = None\n</code></pre> <p>Alignment of the marker relative to the normal center at <code>coordinates</code>.</p> <p>Defaults to the value of the parent <code>MarkerLayer.alignment</code>.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"marker/#flet_map.marker_layer.Marker.content","title":"content","text":"<pre><code>content: Control\n</code></pre> <p>The content to be displayed at <code>coordinates</code>.</p> Note <p>Must be provided and visible.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre> <p>The coordinates of the marker.</p> <p>This will be the center of the marker, if <code>alignment</code> is <code>Alignment.CENTER</code>.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"marker/#flet_map.marker_layer.Marker.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"marker/#flet_map.marker_layer.Marker.height","title":"height","text":"<pre><code>height: Number = 30.0\n</code></pre> <p>The height of the <code>content</code> Control.</p> Note <p>Must be non-negative.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"marker/#flet_map.marker_layer.Marker.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.rotate","title":"rotate","text":"<pre><code>rotate: bool | None = None\n</code></pre> <p>Whether to counter rotate this marker to the map's rotation, to keep a fixed orientation. So, when <code>True</code>, this marker will always appear upright and vertical from the user's perspective.</p> <p>If <code>None</code>, defaults to the value of the parent <code>MarkerLayer.rotate</code>.</p> Note <p>This is not used to apply a custom rotation in degrees to this marker.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"marker/#flet_map.marker_layer.Marker.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.width","title":"width","text":"<pre><code>width: Number = 30.0\n</code></pre> <p>The width of the <code>content</code> Control.</p> Note <p>Must be non-negative.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"marker/#flet_map.marker_layer.Marker.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"marker/#flet_map.marker_layer.Marker.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"marker_layer/","title":"MarkerLayer","text":""},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer","title":"MarkerLayer","text":"<p>               Bases: <code>MapLayer</code></p> <p>A layer to display Markers.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.alignment","title":"alignment","text":"<pre><code>alignment: Alignment | None = field(\n    default_factory=lambda: CENTER\n)\n</code></pre> <p>The alignment of each marker relative to its normal center at <code>Marker.coordinates</code>.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.markers","title":"markers","text":"<pre><code>markers: list[Marker]\n</code></pre> <p>A list of <code>Marker</code>s to display.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.rotate","title":"rotate","text":"<pre><code>rotate: bool = False\n</code></pre> <p>Whether to counter-rotate <code>markers</code> to the map's rotation, to keep a fixed orientation.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"marker_layer/#flet_map.marker_layer.MarkerLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"polygon_layer/","title":"PolygonLayer","text":""},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer","title":"PolygonLayer","text":"<p>               Bases: <code>MapLayer</code></p> <p>A layer to display PolygonMarkers.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.draw_labels_last","title":"draw_labels_last","text":"<pre><code>draw_labels_last: bool = False\n</code></pre> <p>Whether to draw labels last and thus over all the polygons.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.polygon_culling","title":"polygon_culling","text":"<pre><code>polygon_culling: bool = True\n</code></pre> <p>Whether to cull polygons and polygon sections that are outside of the viewport.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.polygon_labels","title":"polygon_labels","text":"<pre><code>polygon_labels: bool = True\n</code></pre> <p>Whether to draw per-polygon labels.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.polygons","title":"polygons","text":"<pre><code>polygons: list[PolygonMarker]\n</code></pre> <p>A list of <code>PolygonMarker</code>s to display.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.simplification_tolerance","title":"simplification_tolerance","text":"<pre><code>simplification_tolerance: Number = 0.3\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.use_alternative_rendering","title":"use_alternative_rendering","text":"<pre><code>use_alternative_rendering: bool = False\n</code></pre> <p>Whether to use an alternative rendering pathway to draw polygons onto the underlying <code>Canvas</code>, which can be more performant in 'some' circumstances.</p> <p>This will not always improve performance, and there are other important considerations before enabling it. It is intended for use when prior profiling indicates more performance is required after other methods are already in use. For example, it may worsen performance when there are a huge number of polygons to triangulate - and so this is best used in conjunction with simplification, not as a replacement.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"polygon_layer/#flet_map.polygon_layer.PolygonLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"polygon_marker/","title":"PolygonMarker","text":""},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker","title":"PolygonMarker","text":"<p>               Bases: <code>Control</code></p> <p>A marker for the <code>PolygonLayer</code>.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.border_color","title":"border_color","text":"<pre><code>border_color: ColorValue = GREEN\n</code></pre> <p>The color of the border outline.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.border_stroke_width","title":"border_stroke_width","text":"<pre><code>border_stroke_width: Number = 0.0\n</code></pre> <p>The width of the border outline.</p> Note <p>Must be non-negative.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.color","title":"color","text":"<pre><code>color: ColorValue = GREEN\n</code></pre> <p>The color of the polygon.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.coordinates","title":"coordinates","text":"<pre><code>coordinates: list[MapLatitudeLongitude]\n</code></pre> <p>The points for the outline of this polygon.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.disable_holes_border","title":"disable_holes_border","text":"<pre><code>disable_holes_border: bool = False\n</code></pre> <p>Whether holes should have borders.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.label","title":"label","text":"<pre><code>label: str | None = None\n</code></pre> <p>An optional label for this polygon.</p> <p>Note: specifying a label will reduce performance, as the internal canvas must be drawn to and 'saved' more frequently to ensure the proper stacking order is maintained. This can be avoided, potentially at the expense of appearance, by setting <code>PolygonLayer.draw_labels_last</code>.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.label_text_style","title":"label_text_style","text":"<pre><code>label_text_style: TextStyle | None = None\n</code></pre> <p>The text style for the label.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.rotate_label","title":"rotate_label","text":"<pre><code>rotate_label: bool = False\n</code></pre> <p>Whether to rotate the label counter to the camera's rotation, to ensure it remains upright.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.stroke_cap","title":"stroke_cap","text":"<pre><code>stroke_cap: StrokeCap = ROUND\n</code></pre> <p>Style to use for line endings.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.stroke_join","title":"stroke_join","text":"<pre><code>stroke_join: StrokeJoin = ROUND\n</code></pre> <p>Style to use for line segment joins.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"polygon_marker/#flet_map.polygon_layer.PolygonMarker.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"polyline_layer/","title":"PolylineLayer","text":""},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer","title":"PolylineLayer","text":"<p>               Bases: <code>MapLayer</code></p> <p>A layer to display <code>PolylineMarker</code>s.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.culling_margin","title":"culling_margin","text":"<pre><code>culling_margin: Number = 10.0\n</code></pre> <p>Acceptable extent outside of viewport before culling polyline segments.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.min_hittable_radius","title":"min_hittable_radius","text":"<pre><code>min_hittable_radius: Number = 10.0\n</code></pre> <p>The minimum radius of the hittable area around each polyline in logical pixels.</p> <p>The entire visible area is always hittable, but if the visible area is smaller than this, then this will be the hittable area.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.polylines","title":"polylines","text":"<pre><code>polylines: list[PolylineMarker]\n</code></pre> <p>List of <code>PolylineMarker</code>s to be drawn.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.simplification_tolerance","title":"simplification_tolerance","text":"<pre><code>simplification_tolerance: Number = 0.3\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"polyline_layer/#flet_map.polyline_layer.PolylineLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"polyline_marker/","title":"PolylineMarker","text":""},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker","title":"PolylineMarker","text":"<p>               Bases: <code>Control</code></p> <p>A marker for the <code>PolylineLayer</code>.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.border_color","title":"border_color","text":"<pre><code>border_color: ColorValue = YELLOW\n</code></pre> <p>The border's color.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.border_stroke_width","title":"border_stroke_width","text":"<pre><code>border_stroke_width: Number = 0.0\n</code></pre> <p>The width of the stroke with of the line border.</p> Note <p>Must be non-negative.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.color","title":"color","text":"<pre><code>color: ColorValue = YELLOW\n</code></pre> <p>The color of the line stroke.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.colors_stop","title":"colors_stop","text":"<pre><code>colors_stop: list[Number] | None = None\n</code></pre> <p>The stops for the <code>gradient_colors</code>.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.coordinates","title":"coordinates","text":"<pre><code>coordinates: list[MapLatitudeLongitude]\n</code></pre> <p>The list of coordinates for the polyline.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.gradient_colors","title":"gradient_colors","text":"<pre><code>gradient_colors: list[ColorValue] | None = None\n</code></pre> <p>The List of colors in case a gradient should get used.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.stroke_cap","title":"stroke_cap","text":"<pre><code>stroke_cap: StrokeCap = ROUND\n</code></pre> <p>Style to use for line endings.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.stroke_join","title":"stroke_join","text":"<pre><code>stroke_join: StrokeJoin = ROUND\n</code></pre> <p>Style to use for line segment joins.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.stroke_pattern","title":"stroke_pattern","text":"<pre><code>stroke_pattern: StrokePattern = field(\n    default_factory=lambda: SolidStrokePattern()\n)\n</code></pre> <p>Determines whether the line should be solid, dotted, or dashed, and the exact characteristics of each.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.stroke_width","title":"stroke_width","text":"<pre><code>stroke_width: Number = 1.0\n</code></pre> <p>The width of the stroke.</p> Note <p>Must be non-negative.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.use_stroke_width_in_meter","title":"use_stroke_width_in_meter","text":"<pre><code>use_stroke_width_in_meter: bool = False\n</code></pre> <p>Whether the stroke's width should have meters as unit.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"polyline_marker/#flet_map.polyline_layer.PolylineMarker.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"rich_attribution/","title":"RichAttribution","text":""},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution","title":"RichAttribution","text":"<p>               Bases: <code>MapLayer</code></p> <p>An animated and interactive attribution layer that supports both images and text (displayed in a popup controlled by an icon button adjacent to the images).</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.alignment","title":"alignment","text":"<pre><code>alignment: AttributionAlignment | None = None\n</code></pre> <p>The position in which to anchor this attribution control.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.attributions","title":"attributions","text":"<pre><code>attributions: list[SourceAttribution]\n</code></pre> <p>List of attributions to display.</p> <p><code>TextSourceAttribution</code>s are shown in a popup box, unlike <code>ImageSourceAttribution</code>, which are visible permanently.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.permanent_height","title":"permanent_height","text":"<pre><code>permanent_height: Number = 24.0\n</code></pre> <p>The height of the permanent row in which is found the popup menu toggle button. Also determines spacing between the items within the row.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.popup_bgcolor","title":"popup_bgcolor","text":"<pre><code>popup_bgcolor: ColorValue | None = SURFACE\n</code></pre> <p>The color to use as the popup box's background color.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.popup_border_radius","title":"popup_border_radius","text":"<pre><code>popup_border_radius: BorderRadiusValue | None = None\n</code></pre> <p>The radius of the edges of the popup box.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.popup_initial_display_duration","title":"popup_initial_display_duration","text":"<pre><code>popup_initial_display_duration: DurationValue = field(\n    default_factory=lambda: Duration()\n)\n</code></pre> <p>The popup box will be open by default and be hidden this long after the map is initialised.</p> <p>This is useful with certain sources/tile servers that make immediate attribution mandatory and are not attributed with a permanently visible <code>ImageSourceAttribution</code>.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.show_flutter_map_attribution","title":"show_flutter_map_attribution","text":"<pre><code>show_flutter_map_attribution: bool = True\n</code></pre> <p>Whether to add an additional attribution logo and text for <code>flutter-map</code>, on which 'flet-map' package is based for map-renderings.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"rich_attribution/#flet_map.rich_attribution.RichAttribution.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"simple_attribution/","title":"SimpleAttribution","text":""},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution","title":"SimpleAttribution","text":"<p>               Bases: <code>MapLayer</code></p> <p>A simple attribution layer displayed on the Map.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.alignment","title":"alignment","text":"<pre><code>alignment: Alignment = field(\n    default_factory=lambda: BOTTOM_RIGHT\n)\n</code></pre> <p>The alignment of this attribution on the map.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.bgcolor","title":"bgcolor","text":"<pre><code>bgcolor: ColorValue = SURFACE\n</code></pre> <p>The color of the box containing the <code>text</code>.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.on_click","title":"on_click","text":"<pre><code>on_click: ControlEventHandler[SimpleAttribution] | None = (\n    None\n)\n</code></pre> <p>Fired when this attribution is clicked/pressed.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.text","title":"text","text":"<pre><code>text: str | Text\n</code></pre> <p>The attribution message to be displayed.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"simple_attribution/#flet_map.simple_attribution.SimpleAttribution.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"source_attribution/","title":"SourceAttribution","text":""},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution","title":"SourceAttribution","text":"<p>               Bases: <code>BaseControl</code></p> <p>Abstract class for source attribution controls:</p> <ul> <li><code>ImageSourceAttribution</code></li> <li><code>TextSourceAttribution</code></li> </ul>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre> <p>This method is called every time when this control is being updated.</p> <p>/// details | Note Make sure not to call/request an <code>update()</code> here. ///</p>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"source_attribution/#flet_map.source_attribution.SourceAttribution.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"text_source_attribution/","title":"TextSourceAttribution","text":""},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution","title":"TextSourceAttribution","text":"<p>               Bases: <code>SourceAttribution</code></p> <p>A text source attribution displayed on the Map. For it to be displayed, it should be part of a <code>RichAttribution.attributions</code> list.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.on_click","title":"on_click","text":"<pre><code>on_click: (\n    ControlEventHandler[TextSourceAttribution] | None\n) = None\n</code></pre> <p>Fired when this attribution is clicked/pressed.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.prepend_copyright","title":"prepend_copyright","text":"<pre><code>prepend_copyright: bool = True\n</code></pre> <p>Whether to add the '\u00a9' character to the start of <code>text</code> automatically.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.text","title":"text","text":"<pre><code>text: str\n</code></pre> <p>The text to display as attribution, styled with <code>text_style</code>.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.text_style","title":"text_style","text":"<pre><code>text_style: TextStyle | None = None\n</code></pre> <p>Style used to display the <code>text</code>.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre> <p>This method is called every time when this control is being updated.</p> <p>/// details | Note Make sure not to call/request an <code>update()</code> here. ///</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"text_source_attribution/#flet_map.source_attribution.TextSourceAttribution.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"tile_layer/","title":"TileLayer","text":""},{"location":"tile_layer/#flet_map.tile_layer.TileLayer","title":"TileLayer","text":"<p>               Bases: <code>MapLayer</code></p> <p>Displays square raster images in a continuous grid, sourced from the provided <code>url_template</code> and <code>fallback_url</code>.</p> <p>Typically the first layer to be added to a <code>Map</code>, as it provides the tiles on which other layers are displayed.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If one or more of the following is negative: <code>tile_size</code>, <code>min_native_zoom</code>, <code>max_native_zoom</code>, <code>zoom_offset</code>, <code>max_zoom</code>, <code>min_zoom</code></p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.additional_options","title":"additional_options","text":"<pre><code>additional_options: dict[str, str] = field(\n    default_factory=dict\n)\n</code></pre> <p>Static information that should replace placeholders in the <code>url_template</code>. Applying API keys, for example, is a good usecase of this parameter.</p> Example <pre><code>TileLayer(\n    url_template=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}{r}.png?access_token={accessToken}\",\n    additional_options={\n        'accessToken': '&lt;ACCESS_TOKEN_HERE&gt;',\n        'id': 'mapbox.streets',\n    },\n),\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.display_mode","title":"display_mode","text":"<pre><code>display_mode: TileDisplay = field(\n    default_factory=lambda: FadeInTileDisplay()\n)\n</code></pre> <p>Defines how tiles are displayed on the map.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.enable_retina_mode","title":"enable_retina_mode","text":"<pre><code>enable_retina_mode: bool = False\n</code></pre> <p>Whether to enable retina mode. Retina mode improves the resolution of map tiles, particularly on high density displays.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.enable_tms","title":"enable_tms","text":"<pre><code>enable_tms: bool = False\n</code></pre> <p>Whether to inverse Y-axis numbering for tiles. Turn this on for TMS services.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.error_image_src","title":"error_image_src","text":"<pre><code>error_image_src: str | None = None\n</code></pre> <p>The source of the tile image to show in place of the tile that failed to load.</p> <p>See <code>on_image_error</code> property for details on the error.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.evict_error_tile_strategy","title":"evict_error_tile_strategy","text":"<pre><code>evict_error_tile_strategy: (\n    TileLayerEvictErrorTileStrategy | None\n) = NONE\n</code></pre> <p>If a tile was loaded with error, the tile provider will be asked to evict the image based on this strategy.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.fallback_url","title":"fallback_url","text":"<pre><code>fallback_url: str | None = None\n</code></pre> <p>Fallback URL template, used if an error occurs when fetching tiles from the <code>url_template</code>.</p> <p>Note that specifying this (non-none) will result in tiles not being cached in memory. This is to avoid issues where the <code>url_template</code> is flaky, to prevent different tilesets being displayed at the same time.</p> <p>It is expected that this follows the same retina support behaviour as <code>url_template</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.keep_buffer","title":"keep_buffer","text":"<pre><code>keep_buffer: int = 2\n</code></pre> <p>When panning the map, keep this many rows and columns of tiles before unloading them.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.max_native_zoom","title":"max_native_zoom","text":"<pre><code>max_native_zoom: int = 19\n</code></pre> <p>Maximum zoom number supported by the tile source has available.</p> <p>Tiles from above this zoom level will not be displayed, instead tiles at this zoom level will be displayed and scaled.</p> <p>Most tile servers support up to zoom level <code>19</code>, which is the default. Otherwise, this should be specified.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.max_zoom","title":"max_zoom","text":"<pre><code>max_zoom: Number = float('inf')\n</code></pre> <p>The maximum zoom level up to which this layer will be displayed (inclusive). The main usage for this property is to display a different <code>TileLayer</code> when zoomed far in.</p> <p>Prefer <code>max_native_zoom</code> for setting the maximum zoom level supported by the tile source.</p> <p>Typically set to infinity so that there are tiles always displayed.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.min_native_zoom","title":"min_native_zoom","text":"<pre><code>min_native_zoom: int = 0\n</code></pre> <p>Minimum zoom level supported by the tile source.</p> <p>Tiles from below this zoom level will not be displayed, instead tiles at this zoom level will be displayed and scaled.</p> <p>This should usually be 0 (as default), as most tile sources will support zoom levels onwards from this.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.min_zoom","title":"min_zoom","text":"<pre><code>min_zoom: Number = 0.0\n</code></pre> <p>The minimum zoom level at which this layer is displayed (inclusive). Typically <code>0.0</code>.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.on_image_error","title":"on_image_error","text":"<pre><code>on_image_error: ControlEventHandler[TileLayer] | None = None\n</code></pre> <p>Fires if an error occurs when fetching the tiles.</p> <p>Event handler argument <code>data</code> property contains information about the error.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.pan_buffer","title":"pan_buffer","text":"<pre><code>pan_buffer: int = 1\n</code></pre> <p>When loading tiles only visible tiles are loaded by default. This option increases the loaded tiles by the given number on both axis which can help prevent the user from seeing loading tiles whilst panning. Setting the pan buffer too high can impact performance, typically this is set to <code>0</code> or <code>1</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.subdomains","title":"subdomains","text":"<pre><code>subdomains: list[str] = field(\n    default_factory=lambda: [\"a\", \"b\", \"c\"]\n)\n</code></pre> <p>List of subdomains used in the URL template.</p> <p>For example, if <code>subdomains</code> is set to <code>[\"a\", \"b\", \"c\"]</code> and the <code>url_template</code> is <code>\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"</code>, the resulting tile URLs will be:</p> <ul> <li><code>\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\"</code></li> <li><code>\"https://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"</code></li> <li><code>\"https://c.tile.openstreetmap.org/{z}/{x}/{y}.png\"</code></li> </ul>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.tile_bounds","title":"tile_bounds","text":"<pre><code>tile_bounds: MapLatitudeLongitudeBounds | None = None\n</code></pre> <p>Defines the bounds of the map. Only tiles that fall within these bounds will be loaded.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.tile_size","title":"tile_size","text":"<pre><code>tile_size: int = 256\n</code></pre> <p>The size in pixels of each tile image. Should be a positive power of 2.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.url_template","title":"url_template","text":"<pre><code>url_template: str\n</code></pre> <p>The URL template is a string that contains placeholders, which, when filled in, create a URL/URI to a specific tile.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.user_agent_package_name","title":"user_agent_package_name","text":"<pre><code>user_agent_package_name: str = 'unknown'\n</code></pre> <p>The package name of the user agent.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.zoom_offset","title":"zoom_offset","text":"<pre><code>zoom_offset: Number = 0.0\n</code></pre> <p>The zoom number used in tile URLs will be offset with this value.</p> Note <p>Must be greater than or equal to <code>0.0</code>.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.zoom_reverse","title":"zoom_reverse","text":"<pre><code>zoom_reverse: bool = False\n</code></pre> <p>Whether the zoom number used in tile URLs will be reversed (<code>max_zoom - zoom</code> instead of <code>zoom</code>).</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"tile_layer/#flet_map.tile_layer.TileLayer.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"types/attribution_alignment/","title":"AttributionAlignment","text":""},{"location":"types/attribution_alignment/#flet_map.types.AttributionAlignment","title":"<code>AttributionAlignment</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Position to anchor <code>RichAttribution</code> control relative to the map.</p>"},{"location":"types/attribution_alignment/#flet_map.types.AttributionAlignment.BOTTOM_LEFT","title":"<code>BOTTOM_LEFT = 'bottomLeft'</code>","text":"<p>The bottom left corner.</p>"},{"location":"types/attribution_alignment/#flet_map.types.AttributionAlignment.BOTTOM_RIGHT","title":"<code>BOTTOM_RIGHT = 'bottomRight'</code>","text":"<p>The bottom right corner.</p>"},{"location":"types/camera/","title":"Camera","text":""},{"location":"types/camera/#flet_map.types.Camera","title":"Camera","text":""},{"location":"types/camera/#flet_map.types.Camera.center","title":"center","text":"<pre><code>center: MapLatitudeLongitude\n</code></pre> <p>The center of this camera.</p>"},{"location":"types/camera/#flet_map.types.Camera.max_zoom","title":"max_zoom","text":"<pre><code>max_zoom: Number\n</code></pre> <p>The maximum allowed zoom level.</p>"},{"location":"types/camera/#flet_map.types.Camera.min_zoom","title":"min_zoom","text":"<pre><code>min_zoom: Number\n</code></pre> <p>The minimum allowed zoom level.</p>"},{"location":"types/camera/#flet_map.types.Camera.rotation","title":"rotation","text":"<pre><code>rotation: Number\n</code></pre> <p>The rotation (in degrees) of the camera.</p>"},{"location":"types/camera/#flet_map.types.Camera.zoom","title":"zoom","text":"<pre><code>zoom: Number\n</code></pre> <p>Defines how far this camera is zoomed.</p>"},{"location":"types/camera_fit/","title":"CameraFit","text":""},{"location":"types/camera_fit/#flet_map.types.CameraFit","title":"CameraFit","text":"<p>Defines how the camera should fit the bounds or coordinates, depending on which one was provided.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If both <code>bounds</code> and <code>coordinates</code></p>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.bounds","title":"bounds","text":"<pre><code>bounds: MapLatitudeLongitudeBounds | None = None\n</code></pre> <p>The bounds which the camera should contain once it is fitted.</p> Note <p>If this is not <code>None</code>, <code>coordinates</code> should be <code>None</code>, and vice versa.</p>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.coordinates","title":"coordinates","text":"<pre><code>coordinates: list[MapLatitudeLongitude] | None = None\n</code></pre> <p>The coordinates which the camera should contain once it is fitted.</p> Note <p>If this is not <code>None</code>, <code>bounds</code> should be <code>None</code>, and vice versa.</p>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.force_integer_zoom_level","title":"force_integer_zoom_level","text":"<pre><code>force_integer_zoom_level: bool = False\n</code></pre> <p>Whether the zoom level of the resulting fit should be rounded to the nearest integer level.</p>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.max_zoom","title":"max_zoom","text":"<pre><code>max_zoom: Number | None = None\n</code></pre> <p>The inclusive upper zoom limit used for the resulting fit.</p> <p>If the zoom level calculated for the fit exceeds the <code>max_zoom</code> value, <code>max_zoom</code> will be used instead.</p>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.min_zoom","title":"min_zoom","text":"<pre><code>min_zoom: Number = 0.0\n</code></pre>"},{"location":"types/camera_fit/#flet_map.types.CameraFit.padding","title":"padding","text":"<pre><code>padding: PaddingValue = field(\n    default_factory=lambda: zero()\n)\n</code></pre> <p>Adds a constant/pixel-based padding to the normal fit.</p>"},{"location":"types/cursor_keyboard_rotation_configuration/","title":"CursorKeyboardRotationConfiguration","text":""},{"location":"types/cursor_keyboard_rotation_configuration/#flet_map.types.CursorKeyboardRotationConfiguration","title":"CursorKeyboardRotationConfiguration","text":"<p>Options to configure cursor/keyboard rotation.</p> <p>Cursor/keyboard rotation is designed for desktop platforms, and allows the cursor to be used to set the rotation of the map whilst a keyboard key is held down (as triggered by <code>is_key_trriger</code>).</p>"},{"location":"types/cursor_keyboard_rotation_configuration/#flet_map.types.CursorKeyboardRotationConfiguration.behavior","title":"behavior","text":"<pre><code>behavior: CursorRotationBehaviour = OFFSET\n</code></pre> <p>The behaviour of the cursor/keyboard rotation function in terms of the angle that the map is rotated to.</p> <p>Does not disable cursor/keyboard rotation, or adjust its triggers: see <code>is_key_trriger</code>.</p>"},{"location":"types/cursor_keyboard_rotation_configuration/#flet_map.types.CursorKeyboardRotationConfiguration.set_north_on_click","title":"set_north_on_click","text":"<pre><code>set_north_on_click: bool = True\n</code></pre> <p>Whether to set the North of the map to the clicked angle, when the user clicks their mouse without dragging (a <code>on_pointer_down</code> event followed by <code>on_pointer_up</code> without a change in rotation).</p>"},{"location":"types/cursor_keyboard_rotation_configuration/#flet_map.types.CursorKeyboardRotationConfiguration.trigger_keys","title":"trigger_keys","text":"<pre><code>trigger_keys: list = field(default_factory=lambda: [])\n</code></pre> <p>List of keys that will trigger cursor/keyboard rotation, when pressed.</p>"},{"location":"types/cursor_keyboard_rotation_configuration/#flet_map.types.CursorKeyboardRotationConfiguration.disabled","title":"disabled","text":"<pre><code>disabled() -&gt; CursorKeyboardRotationConfiguration\n</code></pre> <p>A disabled <code>CursorKeyboardRotationConfiguration</code>.</p>"},{"location":"types/cursor_rotation_behaviour/","title":"CursorRotationBehaviour","text":""},{"location":"types/cursor_rotation_behaviour/#flet_map.types.CursorRotationBehaviour","title":"<code>CursorRotationBehaviour</code>","text":"<p>               Bases: <code>Enum</code></p> <p>The behaviour of the cursor/keyboard rotation function in terms of the angle that the map is rotated to.</p> <p>Does not disable cursor/keyboard rotation, or adjust its triggers: see <code>CursorKeyboardRotationConfiguration.is_key_trriger</code>.</p>"},{"location":"types/cursor_rotation_behaviour/#flet_map.types.CursorRotationBehaviour.OFFSET","title":"<code>OFFSET = 'offset'</code>","text":"<p>Offset the current rotation of the map to the angle at which the user drags their cursor.</p>"},{"location":"types/cursor_rotation_behaviour/#flet_map.types.CursorRotationBehaviour.SET_NORTH","title":"<code>SET_NORTH = 'setNorth'</code>","text":"<p>Set the North of the map to the angle at which the user drags their cursor.</p>"},{"location":"types/fade_in_tile_display/","title":"FadeInTileDisplay","text":""},{"location":"types/fade_in_tile_display/#flet_map.types.FadeInTileDisplay","title":"FadeInTileDisplay","text":"<p>               Bases: <code>TileDisplay</code></p> <p>A <code>TileDisplay</code> that should get faded in.</p>"},{"location":"types/fade_in_tile_display/#flet_map.types.FadeInTileDisplay.duration","title":"duration","text":"<pre><code>duration: DurationValue = field(\n    default_factory=lambda: Duration(milliseconds=100)\n)\n</code></pre> <p>The duration of the fade in animation.</p>"},{"location":"types/fade_in_tile_display/#flet_map.types.FadeInTileDisplay.reload_start_opacity","title":"reload_start_opacity","text":"<pre><code>reload_start_opacity: Number = 0.0\n</code></pre> <p>Opacity start value when a tile is reloaded.</p>"},{"location":"types/fade_in_tile_display/#flet_map.types.FadeInTileDisplay.start_opacity","title":"start_opacity","text":"<pre><code>start_opacity: Number = 0.0\n</code></pre> <p>Opacity start value when a tile is faded in.</p>"},{"location":"types/instantaneous_tile_display/","title":"InstantaneousTileDisplay","text":""},{"location":"types/instantaneous_tile_display/#flet_map.types.InstantaneousTileDisplay","title":"InstantaneousTileDisplay","text":"<p>               Bases: <code>TileDisplay</code></p> <p>A <code>TileDisplay</code> that should get instantaneously displayed.</p>"},{"location":"types/instantaneous_tile_display/#flet_map.types.InstantaneousTileDisplay.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>The optional opacity of the tile.</p>"},{"location":"types/interaction_configuration/","title":"InteractionConfiguration","text":""},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration","title":"InteractionConfiguration","text":""},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.cursor_keyboard_rotation_configuration","title":"cursor_keyboard_rotation_configuration","text":"<pre><code>cursor_keyboard_rotation_configuration: CursorKeyboardRotationConfiguration = field(\n    default_factory=lambda: CursorKeyboardRotationConfiguration()\n)\n</code></pre> <p>Options to control the keyboard and mouse cursor being used together to rotate the map.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.enable_multi_finger_gesture_race","title":"enable_multi_finger_gesture_race","text":"<pre><code>enable_multi_finger_gesture_race: bool = False\n</code></pre> <p>If <code>True</code>, then <code>rotation_threshold</code> and <code>pinch_zoom_threshold</code> and <code>pinch_move_threshold</code> will race. If multiple gestures win at the same time, then precedence: <code>pinch_zoom_win_gestures</code> &gt; <code>rotation_win_gestures</code> &gt; <code>pinch_move_win_gestures</code></p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.flags","title":"flags","text":"<pre><code>flags: InteractionFlag = ALL\n</code></pre> <p>Defines the map events to be enabled/disabled.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.keyboard_configuration","title":"keyboard_configuration","text":"<pre><code>keyboard_configuration: KeyboardConfiguration = field(\n    default_factory=lambda: KeyboardConfiguration()\n)\n</code></pre> <p>Options to configure how keyboard keys may be used to control the map.</p> <p>Keyboard movements using the arrow keys are enabled by default.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.pinch_move_threshold","title":"pinch_move_threshold","text":"<pre><code>pinch_move_threshold: Number = 40.0\n</code></pre> <p>Map starts to move when <code>pinch_move_threshold</code> has been achieved or another multi finger gesture wins which allows <code>MultiFingerGesture.PINCH_MOVE</code>.</p> Note <p>If <code>InteractionConfiguration.flags</code> doesn't contain <code>InteractionFlag.PINCH_MOVE</code> or <code>enable_multi_finger_gesture_race</code> is false then pinch move cannot win.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.pinch_move_win_gestures","title":"pinch_move_win_gestures","text":"<pre><code>pinch_move_win_gestures: MultiFingerGesture = (\n    PINCH_ZOOM | PINCH_MOVE\n)\n</code></pre> <p>When <code>pinch_move_threshold</code> wins over <code>rotation_threshold</code> and <code>pinch_zoom_threshold</code> then <code>pinch_move_win_gestures</code> gestures will be used.</p> <p>By default <code>MultiFingerGesture.PINCH_MOVE</code> and <code>MultiFingerGesture.PINCH_ZOOM</code> gestures will take effect see <code>MultiFingerGesture</code> for custom settings.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.pinch_zoom_threshold","title":"pinch_zoom_threshold","text":"<pre><code>pinch_zoom_threshold: Number = 0.5\n</code></pre> <p>Map starts to zoom when <code>pinch_zoom_threshold</code> has been achieved or another multi finger gesture wins which allows <code>MultiFingerGesture.PINCH_ZOOM</code>.</p> Note <p>If <code>InteractionConfiguration.flags</code> doesn't contain <code>InteractionFlag.PINCH_ZOOM</code> or <code>enable_multi_finger_gesture_race</code> is false then zoom cannot win.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.pinch_zoom_win_gestures","title":"pinch_zoom_win_gestures","text":"<pre><code>pinch_zoom_win_gestures: MultiFingerGesture = (\n    PINCH_ZOOM | PINCH_MOVE\n)\n</code></pre> <p>When <code>pinch_zoom_threshold</code> wins over <code>rotation_threshold</code> and <code>pinch_move_threshold</code> then <code>pinch_zoom_win_gestures</code> gestures will be used.</p> <p>By default <code>MultiFingerGesture.PINCH_ZOOM</code> and <code>MultiFingerGesture.PINCH_MOVE</code> gestures will take effect see <code>MultiFingerGesture</code> for custom settings.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.rotation_threshold","title":"rotation_threshold","text":"<pre><code>rotation_threshold: Number = 20.0\n</code></pre> <p>Map starts to rotate when <code>rotation_threshold</code> has been achieved or another multi finger gesture wins which allows <code>MultiFingerGesture.ROTATE</code>.</p> Note <p>If <code>InteractionConfiguration.flags</code> doesn't contain <code>InteractionFlag.ROTATE</code> or <code>enable_multi_finger_gesture_race</code> is false then rotate cannot win.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.rotation_win_gestures","title":"rotation_win_gestures","text":"<pre><code>rotation_win_gestures: MultiFingerGesture = ROTATE\n</code></pre> <p>When <code>rotation_threshold</code> wins over <code>pinch_zoom_threshold</code> and <code>pinch_move_threshold</code> then <code>rotation_win_gestures</code> gestures will be used.</p>"},{"location":"types/interaction_configuration/#flet_map.types.InteractionConfiguration.scroll_wheel_velocity","title":"scroll_wheel_velocity","text":"<pre><code>scroll_wheel_velocity: Number = 0.005\n</code></pre> <p>The used velocity how fast the map should zoom in or out by scrolling with the scroll wheel of a mouse.</p>"},{"location":"types/interaction_flag/","title":"InteractionFlag","text":""},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag","title":"<code>InteractionFlag</code>","text":"<p>               Bases: <code>IntFlag</code></p> <p>Flags to enable/disable certain interaction events on the map.</p> Example <ul> <li><code>InteractionFlag.ALL</code> to enable all events</li> <li><code>InteractionFlag.NONE</code> to disable all events</li> </ul>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.ALL","title":"<code>ALL = 1 &lt;&lt; 0 | 1 &lt;&lt; 1 | 1 &lt;&lt; 2 | 1 &lt;&lt; 3 | 1 &lt;&lt; 4 | 1 &lt;&lt; 5 | 1 &lt;&lt; 6 | 1 &lt;&lt; 7</code>","text":"<p>All available interactive flags.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.DOUBLE_TAP_DRAG_ZOOM","title":"<code>DOUBLE_TAP_DRAG_ZOOM = 1 &lt;&lt; 5</code>","text":"<p>Zooming with a single-finger double-tap-drag gesture.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.DOUBLE_TAP_ZOOM","title":"<code>DOUBLE_TAP_ZOOM = 1 &lt;&lt; 4</code>","text":"<p>Zooming with a single-finger double tap gesture.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.DRAG","title":"<code>DRAG = 1 &lt;&lt; 0</code>","text":"<p>Panning with a single finger or cursor.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.FLING_ANIMATION","title":"<code>FLING_ANIMATION = 1 &lt;&lt; 1</code>","text":"<p>Fling animation after panning if velocity is great enough.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.NONE","title":"<code>NONE = 0</code>","text":"<p>No interaction.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.PINCH_MOVE","title":"<code>PINCH_MOVE = 1 &lt;&lt; 2</code>","text":"<p>Panning with multiple fingers.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.PINCH_ZOOM","title":"<code>PINCH_ZOOM = 1 &lt;&lt; 3</code>","text":"<p>Zooming with a multi-finger pinch gesture.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.ROTATE","title":"<code>ROTATE = 1 &lt;&lt; 7</code>","text":"<p>Rotation with two-finger twist gesture.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.SCROLL_WHEEL_ZOOM","title":"<code>SCROLL_WHEEL_ZOOM = 1 &lt;&lt; 6</code>","text":"<p>Zooming with a mouse scroll wheel.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_double_tap_drag_zoom","title":"<code>has_double_tap_drag_zoom(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>DOUBLE_TAP_DRAG_ZOOM</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_double_tap_zoom","title":"<code>has_double_tap_zoom(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>DOUBLE_TAP_ZOOM</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_drag","title":"<code>has_drag(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>DRAG</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_flag","title":"<code>has_flag(left_flags: int, right_flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if <code>left_flags</code> has at least one member in <code>right_flags</code> (intersection).</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_fling_animation","title":"<code>has_fling_animation(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>FLING_ANIMATION</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_fling_pinch_zoom","title":"<code>has_fling_pinch_zoom(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>PINCH_ZOOM</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_multi_finger","title":"<code>has_multi_finger(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if any multi-finger gesture flags (<code>MultiFingerGesture.PINCH_MOVE</code>, <code>MultiFingerGesture.PINCH_ZOOM</code>, <code>MultiFingerGesture.ROTATE</code>) are enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_pinch_move","title":"<code>has_pinch_move(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>PINCH_MOVE</code> interaction flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_rotate","title":"<code>has_rotate(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>ROTATE</code> interactive flag is enabled.</p>"},{"location":"types/interaction_flag/#flet_map.types.InteractionFlag.has_scroll_wheel_zoom","title":"<code>has_scroll_wheel_zoom(flags: int) -&gt; bool</code>","text":"RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the <code>SCROLL_WHEEL_ZOOM</code> interaction flag is enabled.</p>"},{"location":"types/keyboard_configuration/","title":"KeyboardConfiguration","text":""},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration","title":"KeyboardConfiguration","text":"<p>Options to configure how keyboard keys may be used to control the map. When a key is pushed down, an animation starts, consisting of a curved portion which takes the animation to its maximum velocity, an indefinitely long animation at maximum velocity, then ended on the key up with another curved portion.</p> <p>If a key is pressed and released quickly, it might trigger a short animation called a 'leap'. The leap consists of a part of the curved portion, and also scales the velocity of the concerned gesture.</p> Info <p>See <code>CursorKeyboardRotationConfiguration</code> for options to control the keyboard and mouse cursor being used together to rotate the map.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.animation_curve_curve","title":"animation_curve_curve","text":"<pre><code>animation_curve_curve: bool = True\n</code></pre> <p>Curve of the curved portion of the animation occuring after key down and key up events.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.animation_curve_duration","title":"animation_curve_duration","text":"<pre><code>animation_curve_duration: DurationValue = field(\n    default_factory=lambda: Duration(milliseconds=450)\n)\n</code></pre> <p>Duration of the curved ([<code>Curve.EASE_IN</code>][flet.Curve.EASE_IN]) portion of the animation occuring after a key down event (and after a key up event if <code>animation_curve_reverse_duration</code> is <code>None</code>)</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.animation_curve_reverse_duration","title":"animation_curve_reverse_duration","text":"<pre><code>animation_curve_reverse_duration: DurationValue | None = (\n    field(\n        default_factory=lambda: Duration(milliseconds=600)\n    )\n)\n</code></pre> <p>Duration of the curved (reverse [<code>Curve.EASE_IN</code>][flet.Curve.EASE_IN]) portion of the animation occuring after a key up event.</p> <p>Set to <code>None</code> to use <code>animation_curve_duration</code>.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.autofocus","title":"autofocus","text":"<pre><code>autofocus: bool = True\n</code></pre> <p>Whether to request focus as soon as the map control appears (and to enable keyboard controls).</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.enable_arrow_keys_panning","title":"enable_arrow_keys_panning","text":"<pre><code>enable_arrow_keys_panning: bool = True\n</code></pre> <p>Whether to allow arrow keys to pan the map (in their respective directions).</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.enable_qe_rotating","title":"enable_qe_rotating","text":"<pre><code>enable_qe_rotating: bool = True\n</code></pre> <p>Whether to allow the <code>Q</code> &amp; <code>E</code> keys (*) to rotate the map (<code>Q</code> rotates anticlockwise, <code>E</code> rotates clockwise).</p> <p>QE are only the physical and logical keys on QWERTY keyboards. On non- QWERTY keyboards, such as AZERTY, the keys in the same position as on the QWERTY keyboard is used (ie. AE on AZERTY).</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.enable_rf_zooming","title":"enable_rf_zooming","text":"<pre><code>enable_rf_zooming: bool = True\n</code></pre> <p>Whether to allow the <code>R</code> &amp; <code>F</code> keys to zoom the map (<code>R</code> zooms IN (increases zoom level), <code>F</code> zooms OUT (decreases zoom level)).</p> <p>RF are only the physical and logical keys on QWERTY keyboards. On non- QWERTY keyboards, such as AZERTY, the keys in the same position as on the QWERTY keyboard is used (ie. RF on AZERTY).</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.enable_wasd_panning","title":"enable_wasd_panning","text":"<pre><code>enable_wasd_panning: bool = True\n</code></pre> <p>Whether to allow the <code>W</code>, <code>A</code>, <code>S</code>, <code>D</code> keys (*) to pan the map (in the directions UP, LEFT, DOWN, RIGHT respectively).</p> <p>WASD are only the physical and logical keys on QWERTY keyboards. On non- QWERTY keyboards, such as AZERTY, the keys in the same position as on the QWERTY keyboard is used (ie. ZQSD on AZERTY).</p> <p>If enabled, it is recommended to enable <code>enable_arrow_keys_panning</code> to provide panning functionality easily for left handed users.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.leap_max_of_curve_component","title":"leap_max_of_curve_component","text":"<pre><code>leap_max_of_curve_component: Number = 0.6\n</code></pre> <p>The percentage (0.0 - 1.0) of the curve animation component that is driven to (from 0), then in reverse from (to 0).</p> <p>Reducing means the leap occurs quicker (assuming a consistent curve animation duration). Also see <code>*_leap_velocity_multiplier</code> properties to change the distance of the leap assuming a consistent leap duration.</p> <p>For example, if set to 1, then the leap will take <code>animation_curve_duration + animation_curve_reverse_duration</code> to complete.</p> <p>Must be greater than 0 and less than or equal to 1. To disable leaping, or change the maximum length of the key press that will trigger a leap, see <code>perform_leap_trigger_duration</code>.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.max_rotate_velocity","title":"max_rotate_velocity","text":"<pre><code>max_rotate_velocity: Number = 3\n</code></pre> <p>The maximum angular difference to apply per frame to the camera's rotation during a rotation animation.</p> <p>Measured in degrees. Negative numbers will flip the standard rotation keys.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.max_zoom_velocity","title":"max_zoom_velocity","text":"<pre><code>max_zoom_velocity: Number = 0.03\n</code></pre> <p>The maximum zoom level difference to apply per frame to the camera's zoom level during a zoom animation.</p> <p>Measured in zoom levels. Negative numbers will flip the standard zoom keys.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.pan_leap_velocity_multiplier","title":"pan_leap_velocity_multiplier","text":"<pre><code>pan_leap_velocity_multiplier: Number = 5\n</code></pre> <p>The amount to scale the panning offset velocity by during a leap animation.</p> <p>The larger the number, the larger the movement during a leap. To change the duration of a leap, see <code>leap_max_of_curve_component</code>.</p> <p>This may cause the pan velocity to exceed [<code>max_pan_velocity</code>][flet_map.types.KeyboardConfiguration.max_pan_velocity].</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.perform_leap_trigger_duration","title":"perform_leap_trigger_duration","text":"<pre><code>perform_leap_trigger_duration: DurationValue | None = field(\n    default_factory=lambda: Duration(milliseconds=100)\n)\n</code></pre> <p>Maximum duration between the key down and key up events of an animation which will trigger a 'leap'.</p> <p>To customize the leap itself, see the <code>leap_max_of_curve_component</code> &amp; <code>*leap_velocity_multiplier</code> (<code>zoom_leap_velocity_multiplier</code>, <code>pan_leap_velocity_multiplier</code> and <code>rotate_leap_velocity_multiplier</code>) properties.</p> <p>Set to <code>None</code> to disable leaping.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.rotate_leap_velocity_multiplier","title":"rotate_leap_velocity_multiplier","text":"<pre><code>rotate_leap_velocity_multiplier: Number = 3\n</code></pre> <p>The amount to scale the rotation velocity by during a leap animation</p> <p>The larger the number, the larger the rotation difference during a leap. To change the duration of a leap, see <code>leap_max_of_curve_component</code>.</p> <p>This may cause the pan velocity to exceed <code>max_rotate_velocity</code>.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.zoom_leap_velocity_multiplier","title":"zoom_leap_velocity_multiplier","text":"<pre><code>zoom_leap_velocity_multiplier: Number = 3\n</code></pre> <p>The amount to scale the zooming velocity by during a leap animation.</p> <p>The larger the number, the larger the zoom difference during a leap. To change the duration of a leap, see <code>leap_max_of_curve_component</code>.</p> <p>This may cause the pan velocity to exceed <code>max_zoom_velocity</code>.</p>"},{"location":"types/keyboard_configuration/#flet_map.types.KeyboardConfiguration.disabled","title":"disabled","text":"<pre><code>disabled() -&gt; KeyboardConfiguration\n</code></pre> <p>Disable keyboard control of the map.</p> Info <p><code>CursorKeyboardRotationConfiguration</code> may still be active, and is not disabled if this is disabled.</p>"},{"location":"types/map_event/","title":"MapEvent","text":""},{"location":"types/map_event/#flet_map.types.MapEvent","title":"MapEvent","text":"<p>               Bases: <code>Event['Map']</code></p>"},{"location":"types/map_event/#flet_map.types.MapEvent.camera","title":"camera","text":"<pre><code>camera: Camera\n</code></pre> <p>The map camera after the event.</p>"},{"location":"types/map_event/#flet_map.types.MapEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/map_event/#flet_map.types.MapEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/map_event/#flet_map.types.MapEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/map_event/#flet_map.types.MapEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/map_event/#flet_map.types.MapEvent.source","title":"source","text":"<pre><code>source: MapEventSource\n</code></pre> <p>Who/what issued the event.</p>"},{"location":"types/map_event/#flet_map.types.MapEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/map_event_source/","title":"MapEventSource","text":""},{"location":"types/map_event_source/#flet_map.types.MapEventSource","title":"MapEventSource","text":"<p>               Bases: <code>Enum</code></p> <p>Defines the source of a <code>MapEvent</code>.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.CURSOR_KEYBOARD_ROTATION","title":"CURSOR_KEYBOARD_ROTATION","text":"<pre><code>CURSOR_KEYBOARD_ROTATION = 'cursorKeyboardRotation'\n</code></pre> <p>The <code>MapEvent</code> is caused by a 'CTRL + drag' rotation gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.CUSTOM","title":"CUSTOM","text":"<pre><code>CUSTOM = 'custom'\n</code></pre> <p>The <code>MapEvent</code> is caused by a custom source.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.DOUBLE_TAP","title":"DOUBLE_TAP","text":"<pre><code>DOUBLE_TAP = 'doubleTap'\n</code></pre> <p>The <code>MapEvent</code> is caused by a double tap gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.DOUBLE_TAP_HOLD","title":"DOUBLE_TAP_HOLD","text":"<pre><code>DOUBLE_TAP_HOLD = 'doubleTapHold'\n</code></pre> <p>The <code>MapEvent</code> is caused by a double tap and hold gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.DOUBLE_TAP_ZOOM_ANIMATION_CONTROLLER","title":"DOUBLE_TAP_ZOOM_ANIMATION_CONTROLLER","text":"<pre><code>DOUBLE_TAP_ZOOM_ANIMATION_CONTROLLER = (\n    \"doubleTapZoomAnimationController\"\n)\n</code></pre> <p>The <code>MapEvent</code> is caused by the <code>AnimationController</code> while performing the double tap zoom in animation.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.DRAG_END","title":"DRAG_END","text":"<pre><code>DRAG_END = 'dragEnd'\n</code></pre> <p>The <code>MapEvent</code> is caused by the end of a drag gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.DRAG_START","title":"DRAG_START","text":"<pre><code>DRAG_START = 'dragStart'\n</code></pre> <p>The <code>MapEvent</code> is caused by the start of a drag gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.FIT_CAMERA","title":"FIT_CAMERA","text":"<pre><code>FIT_CAMERA = 'fitCamera'\n</code></pre> <p>The <code>MapEvent</code> is caused by calling fit_camera.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.FLING_ANIMATION_CONTROLLER","title":"FLING_ANIMATION_CONTROLLER","text":"<pre><code>FLING_ANIMATION_CONTROLLER = 'flingAnimationController'\n</code></pre> <p>The <code>MapEvent</code> is caused by the <code>AnimationController</code> while performing the fling gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.INTERACTIVE_FLAGS_CHANGED","title":"INTERACTIVE_FLAGS_CHANGED","text":"<pre><code>INTERACTIVE_FLAGS_CHANGED = 'InteractionFlagsChanged'\n</code></pre> <p>The <code>MapEvent</code> is caused by a change of the interactive flags.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.KEYBOARD","title":"KEYBOARD","text":"<pre><code>KEYBOARD = 'keyboard'\n</code></pre> <p>The <code>MapEvent</code> is caused by a keyboard key. See <code>KeyboardConfiguration</code> for details.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.LONG_PRESS","title":"LONG_PRESS","text":"<pre><code>LONG_PRESS = 'longPress'\n</code></pre> <p>The <code>MapEvent</code> is caused by a long press gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.MAP_CONTROLLER","title":"MAP_CONTROLLER","text":"<pre><code>MAP_CONTROLLER = 'mapController'\n</code></pre> <p>The <code>MapEvent</code> is caused programmatically by the <code>MapController</code>.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.MULTI_FINGER_GESTURE_END","title":"MULTI_FINGER_GESTURE_END","text":"<pre><code>MULTI_FINGER_GESTURE_END = 'multiFingerEnd'\n</code></pre> <p>The <code>MapEvent</code> is caused by a the end of a two finger gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.MULTI_FINGER_GESTURE_START","title":"MULTI_FINGER_GESTURE_START","text":"<pre><code>MULTI_FINGER_GESTURE_START = 'multiFingerGestureStart'\n</code></pre> <p>The <code>MapEvent</code> is caused by the start of a two finger gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.NON_ROTATED_SIZE_CHANGE","title":"NON_ROTATED_SIZE_CHANGE","text":"<pre><code>NON_ROTATED_SIZE_CHANGE = 'nonRotatedSizeChange'\n</code></pre> <p>The <code>MapEvent</code> is caused by a size change of the <code>Map</code> constraints.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.ON_DRAG","title":"ON_DRAG","text":"<pre><code>ON_DRAG = 'onDrag'\n</code></pre> <p>The <code>MapEvent</code> is caused by a drag update gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.ON_MULTI_FINGER","title":"ON_MULTI_FINGER","text":"<pre><code>ON_MULTI_FINGER = 'onMultiFinger'\n</code></pre> <p>The <code>MapEvent</code> is caused by a two finger gesture update.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.SCROLL_WHEEL","title":"SCROLL_WHEEL","text":"<pre><code>SCROLL_WHEEL = 'scrollWheel'\n</code></pre> <p>The <code>MapEvent</code> is caused by a scroll wheel zoom gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.SECONDARY_TAP","title":"SECONDARY_TAP","text":"<pre><code>SECONDARY_TAP = 'secondaryTap'\n</code></pre> <p>The <code>MapEvent</code> is caused by a secondary tap gesture.</p>"},{"location":"types/map_event_source/#flet_map.types.MapEventSource.TAP","title":"TAP","text":"<pre><code>TAP = 'tap'\n</code></pre> <p>The <code>MapEvent</code> is caused by a tap gesture.</p>"},{"location":"types/map_hover_event/","title":"MapHoverEvent","text":""},{"location":"types/map_hover_event/#flet_map.types.MapHoverEvent","title":"MapHoverEvent","text":"<p>               Bases: <code>HoverEvent['Map']</code></p>"},{"location":"types/map_hover_event/#flet_map.types.MapHoverEvent.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre>"},{"location":"types/map_latitude_longitude/","title":"MapLatitudeLongitude","text":""},{"location":"types/map_latitude_longitude/#flet_map.types.MapLatitudeLongitude","title":"MapLatitudeLongitude","text":"<p>Map coordinates in degrees.</p>"},{"location":"types/map_latitude_longitude/#flet_map.types.MapLatitudeLongitude.latitude","title":"latitude","text":"<pre><code>latitude: Number\n</code></pre> <p>The latitude point of this coordinate.</p>"},{"location":"types/map_latitude_longitude/#flet_map.types.MapLatitudeLongitude.longitude","title":"longitude","text":"<pre><code>longitude: Number\n</code></pre> <p>The longitude point of this coordinate.</p>"},{"location":"types/map_latitude_longitude_bounds/","title":"MapLatitudeLongitudeBounds","text":""},{"location":"types/map_latitude_longitude_bounds/#flet_map.types.MapLatitudeLongitudeBounds","title":"MapLatitudeLongitudeBounds","text":"<p>Both corners have to be on opposite sites, but it doesn't matter which opposite corners or in what order the corners are provided.</p>"},{"location":"types/map_latitude_longitude_bounds/#flet_map.types.MapLatitudeLongitudeBounds.corner_1","title":"corner_1","text":"<pre><code>corner_1: MapLatitudeLongitude\n</code></pre> <p>The corner 1.</p>"},{"location":"types/map_latitude_longitude_bounds/#flet_map.types.MapLatitudeLongitudeBounds.corner_2","title":"corner_2","text":"<pre><code>corner_2: MapLatitudeLongitude\n</code></pre> <p>The corner 2.</p>"},{"location":"types/map_pointer_event/","title":"MapPointerEvent","text":""},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent","title":"MapPointerEvent","text":"<p>               Bases: <code>PointerEvent['Map']</code></p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre> <p>Coordinates of the point at which the tap occured.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.device","title":"device","text":"<pre><code>device: float = field(metadata={'data_field': 'dev'})\n</code></pre> <p>Unique identifier for the pointing device, reused across interactions.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.distance","title":"distance","text":"<pre><code>distance: float = field(metadata={'data_field': 'dist'})\n</code></pre> <p>The distance of the detected object from the input surface. For instance, this value could be the distance of a stylus or finger from a touch screen, in arbitrary units on an arbitrary (not necessarily linear) scale. If the pointer is down, this is 0.0 by definition.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.distance_max","title":"distance_max","text":"<pre><code>distance_max: float = field(\n    metadata={\"data_field\": \"distMax\"}\n)\n</code></pre> <p>The maximum value that <code>distance</code> can return for this pointer.</p> <p>If this input device cannot detect \"hover touch\" input events, then this will be <code>0.0</code>.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.global_delta","title":"global_delta","text":"<pre><code>global_delta: Offset | None = field(\n    default=None, metadata={\"data_field\": \"gd\"}\n)\n</code></pre> <p>The delta of the pointer's position since the event start, in logical pixels, within the global coordinate space.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.global_position","title":"global_position","text":"<pre><code>global_position: Offset = field(\n    metadata={\"data_field\": \"g\"}\n)\n</code></pre> <p>Coordinate of the position of the pointer, in logical pixels in the global coordinate space.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.kind","title":"kind","text":"<pre><code>kind: PointerDeviceType = field(\n    metadata={\"data_field\": \"k\"}\n)\n</code></pre> <p>The kind of input device for which the event was generated.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.local_delta","title":"local_delta","text":"<pre><code>local_delta: Offset | None = field(\n    default=None, metadata={\"data_field\": \"ld\"}\n)\n</code></pre> <p>The delta of the pointer's position since the event start, in logical pixels, within the local coordinate space.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.local_position","title":"local_position","text":"<pre><code>local_position: Offset = field(metadata={\"data_field\": \"l\"})\n</code></pre> <p>The position transformed into the event receiver's local coordinate system according to transform.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.orientation","title":"orientation","text":"<pre><code>orientation: float = field(metadata={'data_field': 'or'})\n</code></pre> <p>The orientation angle of the detected object, in radians.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.pressure","title":"pressure","text":"<pre><code>pressure: float = field(metadata={'data_field': 'ps'})\n</code></pre> <p>The pressure of the touch.</p> <p>This value is a number ranging from 0.0, indicating a touch with no discernible pressure, to 1.0, indicating a touch with \"normal\" pressure, and possibly beyond, indicating a stronger touch. For devices that do not detect pressure (e.g. mice), returns 1.0.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.pressure_max","title":"pressure_max","text":"<pre><code>pressure_max: float = field(metadata={\"data_field\": \"pMax\"})\n</code></pre> <p>The maximum value that <code>pressure</code> can return for this pointer. For devices that do not detect pressure (e.g. mice), returns 1.0. This will always be a greater than or equal to 1.0.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.pressure_min","title":"pressure_min","text":"<pre><code>pressure_min: float = field(metadata={\"data_field\": \"pMin\"})\n</code></pre> <p>The minimum value that <code>pressure</code> can return for this pointer.</p> <p>For devices that do not detect pressure (e.g. mice), returns 1.0. This will always be a number less than or equal to 1.0.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.radius_major","title":"radius_major","text":"<pre><code>radius_major: float = field(metadata={'data_field': 'rMj'})\n</code></pre> <p>The radius of the contact ellipse along the major axis, in logical pixels.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.radius_max","title":"radius_max","text":"<pre><code>radius_max: float = field(metadata={'data_field': 'rMax'})\n</code></pre> <p>The maximum value that could be reported for <code>radius_major</code> and <code>radius_minor</code> for this pointer, in logical pixels.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.radius_min","title":"radius_min","text":"<pre><code>radius_min: float = field(metadata={'data_field': 'rMin'})\n</code></pre> <p>The minimum value that could be reported for <code>radius_major</code> and <code>radius_minor</code> for this pointer, in logical pixels.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.radius_minor","title":"radius_minor","text":"<pre><code>radius_minor: float = field(metadata={'data_field': 'rMn'})\n</code></pre> <p>The radius of the contact ellipse along the minor axis, in logical pixels.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.size","title":"size","text":"<pre><code>size: float = field(metadata={'data_field': 'size'})\n</code></pre> <p>The area of the screen being pressed.</p> <p>This value is scaled to a range between 0 and 1. It can be used to determine fat touch events. This value is only set on Android and is a device specific approximation within the range of detectable values. So, for example, the value of 0.1 could mean a touch with the tip of the finger, 0.2 a touch with full finger, and 0.3 the full palm.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.tilt","title":"tilt","text":"<pre><code>tilt: float = field(metadata={'data_field': 'tilt'})\n</code></pre> <p>The tilt angle of the detected object, in radians.</p>"},{"location":"types/map_pointer_event/#flet_map.types.MapPointerEvent.timestamp","title":"timestamp","text":"<pre><code>timestamp: Duration = field(metadata={'data_field': 'ts'})\n</code></pre> <p>Time of event dispatch, relative to an arbitrary timeline.</p>"},{"location":"types/map_position_change_event/","title":"MapPositionChangeEvent","text":""},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent","title":"MapPositionChangeEvent","text":"<p>               Bases: <code>Event['Map']</code></p>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.camera","title":"camera","text":"<pre><code>camera: Camera\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.has_gesture","title":"has_gesture","text":"<pre><code>has_gesture: bool\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/map_position_change_event/#flet_map.types.MapPositionChangeEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/map_tap_event/","title":"MapTapEvent","text":""},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent","title":"MapTapEvent","text":"<p>               Bases: <code>TapEvent['Map']</code></p>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.coordinates","title":"coordinates","text":"<pre><code>coordinates: MapLatitudeLongitude\n</code></pre> <p>Coordinates of the point at which the tap occured.</p>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.global_position","title":"global_position","text":"<pre><code>global_position: Offset | None = field(\n    default=None, metadata={\"data_field\": \"g\"}\n)\n</code></pre> <p>The global position at which the pointer contacted the screen.</p>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.kind","title":"kind","text":"<pre><code>kind: PointerDeviceType | None = field(\n    default=None, metadata={\"data_field\": \"k\"}\n)\n</code></pre> <p>The kind of the device that initiated the event.</p>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.local_position","title":"local_position","text":"<pre><code>local_position: Offset | None = field(\n    default=None, metadata={\"data_field\": \"l\"}\n)\n</code></pre> <p>The local position at which the pointer contacted the screen.</p>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/map_tap_event/#flet_map.types.MapTapEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/multi_finger_gesture/","title":"MultiFingerGesture","text":""},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture","title":"<code>MultiFingerGesture</code>","text":"<p>               Bases: <code>IntFlag</code></p> <p>Flags to enable/disable certain multi-finger gestures on the map.</p>"},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture.ALL","title":"<code>ALL = 1 &lt;&lt; 0 | 1 &lt;&lt; 1 | 1 &lt;&lt; 2</code>","text":"<p>All multi-finger gestures defined in this enum.</p>"},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture.NONE","title":"<code>NONE = 0</code>","text":"<p>No multi-finger gesture.</p>"},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture.PINCH_MOVE","title":"<code>PINCH_MOVE = 1 &lt;&lt; 0</code>","text":"<p>Pinch move gesture, which allows moving the map by dragging with two fingers.</p>"},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture.PINCH_ZOOM","title":"<code>PINCH_ZOOM = 1 &lt;&lt; 1</code>","text":"<p>Pinch zoom gesture, which allows zooming in and out by pinching with two fingers.</p>"},{"location":"types/multi_finger_gesture/#flet_map.types.MultiFingerGesture.ROTATE","title":"<code>ROTATE = 1 &lt;&lt; 2</code>","text":"<p>Rotate gesture, which allows rotating the map by twisting two fingers.</p>"},{"location":"types/pattern_fit/","title":"PatternFit","text":""},{"location":"types/pattern_fit/#flet_map.types.PatternFit","title":"<code>PatternFit</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Determines how a non-solid <code>StrokePattern</code> should be fit to a line when their lengths are not equal or multiples</p>"},{"location":"types/pattern_fit/#flet_map.types.PatternFit.APPEND_DOT","title":"<code>APPEND_DOT = 'appendDot'</code>","text":"<p>Uses the pattern exactly, truncating the final dash if it does not fit, or adding a single dot at the last point if the final dash does not reach the last point (there is a gap at that location).</p>"},{"location":"types/pattern_fit/#flet_map.types.PatternFit.EXTEND_FINAL_DASH","title":"<code>EXTEND_FINAL_DASH = 'extendFinalDash'</code>","text":"<p>Uses the pattern exactly, truncating the final dash if it does not fit, or extending the final dash to the last point if it would not normally reach that point (there is a gap at that location).</p> <p>Only useful when working with <code>DashedStrokePattern</code>. Similar to <code>APPEND_DOT</code> for <code>DottedStrokePattern</code>.</p>"},{"location":"types/pattern_fit/#flet_map.types.PatternFit.NONE","title":"<code>NONE = 'none'</code>","text":"<p>Don't apply any specific fit to the pattern - repeat exactly as specified, and stop when the last point is reached.</p> <p>Not recommended, as it may leave a gap between the final segment and the last point, making it unclear where the line ends.</p>"},{"location":"types/pattern_fit/#flet_map.types.PatternFit.SCALE_DOWN","title":"<code>SCALE_DOWN = 'scaleDown'</code>","text":"<p>Scale the pattern to ensure it fits an integer number of times into the polyline (smaller version regarding rounding, cf. <code>SCALE_UP</code>).</p>"},{"location":"types/pattern_fit/#flet_map.types.PatternFit.SCALE_UP","title":"<code>SCALE_UP = 'scaleUp'</code>","text":"<p>Scale the pattern to ensure it fits an integer number of times into the polyline (bigger version regarding rounding, cf. <code>SCALE_DOWN</code>).</p>"},{"location":"types/stroke_pattern/","title":"StrokePattern","text":""},{"location":"types/stroke_pattern/#flet_map.types.StrokePattern","title":"StrokePattern","text":"<p>Determines whether a stroke should be solid, dotted, or dashed, and the exact characteristics of each.</p> <p>This is an abstract class and shouldn't be used directly.</p> <p>See usable derivatives: - <code>SolidStrokePattern</code> - <code>DashedStrokePattern</code> - <code>DottedStrokePattern</code></p>"},{"location":"types/stroke_pattern/#flet_map.types.SolidStrokePattern","title":"SolidStrokePattern","text":"<p>               Bases: <code>StrokePattern</code></p> <p>A solid/unbroken stroke pattern.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DashedStrokePattern","title":"DashedStrokePattern","text":"<p>               Bases: <code>StrokePattern</code></p> <p>A stroke pattern of alternating dashes and gaps, defined by <code>segments</code>.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If <code>segments</code> does not contain at least two items, or has an odd length.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DashedStrokePattern.pattern_fit","title":"pattern_fit","text":"<pre><code>pattern_fit: PatternFit = SCALE_UP\n</code></pre> <p>Determines how this stroke pattern should be fit to a line when their lengths are not equal or multiples.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DashedStrokePattern.segments","title":"segments","text":"<pre><code>segments: list[Number] = field(default_factory=list)\n</code></pre> <p>A list of alternating dash and gap lengths, in pixels.</p> Note <p>Must contain at least two items, and have an even length.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DottedStrokePattern","title":"DottedStrokePattern","text":"<p>               Bases: <code>StrokePattern</code></p> <p>A stroke pattern of circular dots, spaced with <code>spacing_factor</code>.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If <code>spacing_factor</code> is negative.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DottedStrokePattern.pattern_fit","title":"pattern_fit","text":"<pre><code>pattern_fit: PatternFit = SCALE_UP\n</code></pre> <p>Determines how this stroke pattern should be fit to a line when their lengths are not equal or multiples.</p>"},{"location":"types/stroke_pattern/#flet_map.types.DottedStrokePattern.spacing_factor","title":"spacing_factor","text":"<pre><code>spacing_factor: Number = 1.5\n</code></pre> <p>The multiplier used to calculate the spacing between dots in a dotted polyline, with respect to <code>Polyline.stroke_width</code> / <code>Polygon.border_stroke_width</code>. A value of <code>1.0</code> will result in spacing equal to the <code>stroke_width</code>. Increasing the value increases the spacing with the same scaling.</p> <p>May also be scaled by the use of <code>PatternFit.SCALE_UP</code>.</p> Note <p>Must be non-negative.</p>"},{"location":"types/tile_display/","title":"TileDisplay","text":""},{"location":"types/tile_display/#flet_map.types.TileDisplay","title":"TileDisplay","text":"<p>Defines how the tile should get displayed on the map.</p> <p>This is an abstract class and shouldn't be used directly.</p> <p>See usable derivatives: - <code>InstantaneousTileDisplay</code> - <code>FadeInTileDisplay</code></p>"},{"location":"types/tile_layer_evict_error_tile_strategy/","title":"TileLayerEvictErrorTileStrategy","text":""},{"location":"types/tile_layer_evict_error_tile_strategy/#flet_map.types.TileLayerEvictErrorTileStrategy","title":"<code>TileLayerEvictErrorTileStrategy</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Strategies on how to handle tile errors.</p>"},{"location":"types/tile_layer_evict_error_tile_strategy/#flet_map.types.TileLayerEvictErrorTileStrategy.DISPOSE","title":"<code>DISPOSE = 'dispose'</code>","text":"<p>Evict images for tiles which failed to load when they are pruned.</p>"},{"location":"types/tile_layer_evict_error_tile_strategy/#flet_map.types.TileLayerEvictErrorTileStrategy.NONE","title":"<code>NONE = 'none'</code>","text":"<p>Never evict images for tiles which failed to load.</p>"},{"location":"types/tile_layer_evict_error_tile_strategy/#flet_map.types.TileLayerEvictErrorTileStrategy.NOT_VISIBLE","title":"<code>NOT_VISIBLE = 'notVisible'</code>","text":"Evict images for tiles which failed to load and <ul> <li>do not belong to the current zoom level AND/OR</li> <li>are not visible</li> </ul>"},{"location":"types/tile_layer_evict_error_tile_strategy/#flet_map.types.TileLayerEvictErrorTileStrategy.NOT_VISIBLE_RESPECT_MARGIN","title":"<code>NOT_VISIBLE_RESPECT_MARGIN = 'notVisibleRespectMargin'</code>","text":"Evict images for tiles which failed to load and <ul> <li>do not belong to the current zoom level AND/OR</li> <li>are not visible, respecting the pruning buffer     (the maximum of the <code>keep_buffer</code> and <code>pan_buffer</code>).</li> </ul>"}]}